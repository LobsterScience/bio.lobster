catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
png(file.path(figdir,paste0("FisheryFootprint",yrs[i],".png")), width = 480, height = 480, units = "px",pointsize = 12, bg = "white", res = 1200)
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
png(file.path(figdir,paste0("FisheryFootprint",yrs[i],".png")), width = 4, height = 4, units = 'in', res= 300,pointsize = 12, bg = "white")
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
dev.off()
dev.off()
dev.off()
dev.off()
la()
p = bio.lobster::load.environment()
p$syr = 2005
p$yrs = p$syr:p$current.assessment.year
figdir = file.path(project.datadirectory("bio.lobster"),"figures","LFA2733Framework2018")
p$lfas = c("27", "28", "29", "30", "31A", "31B", "32", "33") # specify lfas for data summary
la()
p = bio.lobster::load.environment()
p$syr = 2005
p$yrs = p$syr:p$current.assessment.year
figdir = file.path(project.datadirectory("bio.lobster"),"figures","LFA2733Framework2018")
p$lfas = c("27", "28", "29", "30", "31A", "31B", "32", "33") # specify lfas for data summary
la()
p = bio.lobster::load.environment()
p$syr = 2005
p$yrs = p$syr:p$current.assessment.year
figdir = file.path(project.datadirectory("bio.lobster"),"figures","LFA2733Framework2018")
p$lfas = c("27", "28", "29", "30", "31A", "31B", "32", "33") # specify lfas for data summary
logsInSeason<-lobster.db('process.logs')
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
png(file.path(figdir,paste0("FisheryFootprint",yrs[i],".png")), width = 4, height = 4, units = 'in', res= 300)
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
pdf(file.path(figdir,paste0("FisheryFootprint",yrs[i],".pdf")))
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
LobsterMap('27-33')
la()
p = bio.lobster::load.environment()
la()
LobsterMap('27-33')
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
pdf(file.path(figdir,paste0("FisheryFootprint",yrs[i],".pdf")))
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
png(file.path(figdir,paste0("FisheryFootprint",yrs[i],".png")), width = 4, height = 4, units = 'in', res= 300)
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
png(file.path(figdir,paste0("FisheryFootprint",yrs[i],".png")), width = 4, height = 4, units = 'in', res= 300)
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
dev.off()
dev.off()
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
png(file.path(figdir,paste0("FisheryFootprint",yrs[i],".png")), width = 6, height = 6, units = 'in', res= 300)
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
pdf(file.path(figdir,paste0("FisheryFootprint",yrs[i],".pdf")))
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
la()
logsInSeason<-lobster.db('process.logs')
p = bio.lobster::load.environment()
p$syr = 2005
p$yrs = p$syr:p$current.assessment.year
figdir = file.path(project.datadirectory("bio.lobster"),"figures","LFA2733Framework2018")
p$lfas = c("27", "28", "29", "30", "31A", "31B", "32", "33") # specify lfas for data summary
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
pdf(file.path(figdir,paste0("FisheryFootprint",yrs[i],".pdf")))
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
png(file.path(figdir,paste0("FisheryFootprint",yrs[i],".png")), width = 6, height = 6, units = 'in', res= 300)
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
??png()
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
png(file.path(figdir,paste0("FisheryFootprint",yrs[i],".png")), width = 6, height = 6, units = 'in', res= 400, pointsize = 10 )
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
## Fishery Footprint - Landings
catchLevels = c(0,100000,200000,300000,400000,500000,600000,700000,800000)
yrs = 2011:2016
for(i in 1:length(yrs)){
catchgrids = lobGridPlot(subset(logsInSeason,LFA%in%p$lfas&SYEAR==yrs[i],c("LFA","GRID_NUM","TOTAL_WEIGHT_KG")),FUN=sum,lvls=catchLevels)
png(file.path(figdir,paste0("FisheryFootprint",yrs[i],".png")), width = 8, height = 8, units = 'in', res= 400, pointsize = 10 )
LobsterMap('27-33',poly.lst=catchgrids)
SpatialHub::contLegend('bottomright',lvls=catchgrids$lvls/1000,Cont.data=catchgrids,title="Catch (tons)",inset=0.02,cex=0.8,bg='white')
dev.off()
}
p = bio.lobster::load.environment()
p$syr = 2005
p$yrs = p$syr:p$current.assessment.year
figdir = file.path(project.datadirectory("bio.lobster"),"figures","LFA2733Framework2018")
p$lfas = c("27", "28", "29", "30", "31A", "31B", "32", "33") # specify lfas for data summary
## Carapace Length Frequency Plots
CarapaceLengthFrequencies(LFAs= '33', DS='atSea', by='SEX', fn='33',Yrs = c(2009:2014),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '32', DS='atSea', by='SEX', fn='32',Yrs = c(2009:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2009:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '33', DS='atSea', by='SEX', fn='33',Yrs = c(2009:2016),vers=2,rootdir=figdir)
atSeaCLF
CarapaceLengthFrequencies(LFAs= '27', DS='atSea', by='SEX', fn='27',Yrs = c(2009:2016),vers=2,rootdir=figdir)
summary(atSea)
CarapaceLengthFrequencies(LFAs= '33', DS='atSea', by='SEX', fn='33',Yrs = c(2009:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '32', DS='atSea', by='SEX', fn='32',Yrs = c(2009:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2009:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31B', DS='atSea', by='SEX', fn='31B',Yrs = c(2009:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '30', DS='atSea', by='SEX', fn='30',Yrs = c(2009:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '29', DS='atSea', by='SEX', fn='29',Yrs = c(2009:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '27', DS='atSea', by='SEX', fn='27',Yrs = c(2009:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '33', DS='atSea', by='SEX', fn='33',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '32', DS='atSea', by='SEX', fn='32',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
View(atSea)
str(atSea)
CarapaceLengthFrequencies(LFAs= '28', DS='atSea', by='SEX', fn='28',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '27', DS='atSea', by='SEX', fn='27',Yrs = c(2011:2016),vers=2,rootdir=figdir)
27CLF<-	CarapaceLengthFrequencies(LFAs= '27', DS='atSea', by='SEX', fn='27',Yrs = c(2011:2016),vers=2,rootdir=figdir)
27CLF <-CarapaceLengthFrequencies(LFAs= '27', DS='atSea', by='SEX', fn='27',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CLF_27 <-CarapaceLengthFrequencies(LFAs= '27', DS='atSea', by='SEX', fn='27',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CLF_27
plot(CLF_27)
CarapaceLengthFrequencies(LFAs= '29', DS='atSea', by='SEX', fn='29',Yrs = c(2011:2016),vers=2,rootdir=figdir)
la()
CarapaceLengthFrequencies(LFAs= '29', DS='atSea', by='SEX', fn='29',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '27', DS='atSea', by='SEX', fn='27',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '29', DS='atSea', by='SEX', fn='29',Yrs = c(2011:2016),vers=2,rootdir=figdir)
lobster.db("fsrs")
View(fsrs)
CarapaceLengthFrequencies(LFAs= '29', DS='atSea', by='SEX', fn='29',Yrs = c(2013, 2015, 2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '30', DS='atSea', by='SEX', fn='30',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '30', DS='atSea', by='SEX', fn='30',Yrs = c(2012),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
dev.off()
dev.off()
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2009:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31B', DS='atSea', by='SEX', fn='31B',Yrs = c(2011:2016),vers=2,rootdir=figdir)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
dev.off()
dev.off()
CarapaceLengthFrequencies(LFAs= '32', DS='atSea', by='SEX', fn='32',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '33', DS='atSea', by='SEX', fn='33',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '33', DS='atSea', by='SEX', fn='33',Yrs = c(2012:2014),vers=2,rootdir=figdir)
p$lfas = c("27", "28", "29", "30", "31.1", "31.2", "32", "33") # specify lfas for data summary
CarapaceLengthFrequencies(LFAs= p$lfas, DS='fsrs', by="LFA", bins=seq(0,140,10),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '27', fn= '27', DS='fsrs', by="SEX", bins=seq(0,140,10), vers=2,Yrs = c(2009:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '27', fn= '27', DS='fsrs', by="SEX", bins=seq(0,140,10), vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '29', fn= '29', DS='fsrs', by="SEX", bins=seq(0,140,10), vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '30', fn= '30', DS='fsrs', by="SEX", bins=seq(0,140,10), vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= 31.1,fn= '31A', DS='fsrs', by="SEX", bins=seq(0,140,10),vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= 31.2,fn= '31B', DS='fsrs', by="SEX", bins=seq(0,140,10),vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '32', fn= '32', DS='fsrs', by="SEX", bins=seq(0,140,10), vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '33', fn= '33', DS='fsrs', by="SEX", bins=seq(0,140,10), vers=2,Yrs = c(2011:2016),rootdir=figdir)
p = bio.lobster::load.environment()
p$syr = 2005
p$yrs = p$syr:p$current.assessment.year
figdir = file.path(project.datadirectory("bio.lobster"),"figures","LFA2733Framework2018")
p$lfas = c("27", "28", "29", "30", "31A", "31B", "32", "33") # specify lfas for data summary
CarapaceLengthFrequencies(LFAs= '27', DS='atSea', by='SEX', fn='27',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '29', DS='atSea', by='SEX', fn='29',Yrs = c(2013, 2015, 2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '30', DS='atSea', by='SEX', fn='30',Yrs = c(2012),vers=2,rootdir=figdir)
la()
la()
CarapaceLengthFrequencies(LFAs= '27', DS='atSea', by='SEX', fn='27',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '29', DS='atSea', by='SEX', fn='29',Yrs = c(2013, 2015, 2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=1,rootdir=figdir)
dev.off()
dev.off()
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=1,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
la()
la()
require(bio.lobster)
la()
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
LS
mls
head(atSea)
mls<-read.csv(file.path( project.datadirectory("bio.lobster"), "data","inputs","MinLegalSize.csv"))
mlslfas<-as.numeric(substr(names(mls[-1]),4,5))
if(31.1%in%LFAs) mlslfas[which(mlslfas==31)]<-c(31.1,31.2)
mls=cbind(mls[mls$Year%in%Yrs,which(mlslfas%in%LFAs)+1])
LFAs = 31.1
#MLS
mls<-read.csv(file.path( project.datadirectory("bio.lobster"), "data","inputs","MinLegalSize.csv"))
mlslfas<-as.numeric(substr(names(mls[-1]),4,5))
if(31.1%in%LFAs) mlslfas[which(mlslfas==31)]<-c(31.1,31.2)
mls=cbind(mls[mls$Year%in%Yrs,which(mlslfas%in%LFAs)+1])
Yrs=2005:2016
#MLS
mls<-read.csv(file.path( project.datadirectory("bio.lobster"), "data","inputs","MinLegalSize.csv"))
mlslfas<-as.numeric(substr(names(mls[-1]),4,5))
if(31.1%in%LFAs) mlslfas[which(mlslfas==31)]<-c(31.1,31.2)
mls=cbind(mls[mls$Year%in%Yrs,which(mlslfas%in%LFAs)+1])
View(mls)
CarapaceLengthFrequencies(LFAs= '31.1', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
mls<-read.csv(file.path( project.datadirectory("bio.lobster"), "data","inputs","MinLegalSize.csv"))
mls
la()\
la()
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
la()
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
mls
mls<-read.csv(file.path( project.datadirectory("bio.lobster"), "data","inputs","MinLegalSize.csv"))
str(mls)
ll = '31a'
mls[,c('Year',which(names(mls)==ll))]
mls[,c(which(names(mls)==ll))]
ll
names(mls)
la()
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
la()
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
head(mls)
ll = 'LFA31a'
ll
mls = mls[,c('Year',ll)] }
mls = mls[,c('Year',ll)]
mls
if(LFAs%in% c('31a','31A','31.1')){ll = 'LFA31a'; mls = mls[,c('Year',ll)] }
mls=as.numeric(subset(mls,Year %in% Yrs)[,2])
mls
la()
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
C
graphics.off()
la()
CarapaceLengthFrequencies(LFAs= '31A', DS='atSea', by='SEX', fn='31A',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31.2', DS='atSea', by='SEX', fn='31B',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '31B', DS='atSea', by='SEX', fn='31B',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '32', DS='atSea', by='SEX', fn='32',Yrs = c(2011:2016),vers=2,rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '33', DS='atSea', by='SEX', fn='33',Yrs = c(2012:2014),vers=2,rootdir=figdir)
p$lfas = c("27", "28", "29", "30", "31.1", "31.2", "32", "33") # specify lfas for data summa
CarapaceLengthFrequencies(LFAs= p$lfas, DS='fsrs', by="LFA", bins=seq(0,140,10),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '27', fn= '27', DS='fsrs', by="SEX", bins=seq(0,140,10), vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '29', fn= '29', DS='fsrs', by="SEX", bins=seq(0,140,10), vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '30', fn= '30', DS='fsrs', by="SEX", bins=seq(0,140,10), vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= 31.1,fn= '31A', DS='fsrs', by="SEX", bins=seq(0,140,10),vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= 31.2,fn= '31B', DS='fsrs', by="SEX", bins=seq(0,140,10),vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '32', fn= '32', DS='fsrs', by="SEX", bins=seq(0,140,10), vers=2,Yrs = c(2011:2016),rootdir=figdir)
CarapaceLengthFrequencies(LFAs= '33', fn= '33', DS='fsrs', by="SEX", bins=seq(0,140,10), vers=2,Yrs = c(2011:2016),rootdir=figdir)
p$lfas = c("27", "28", "29", "30", "31A", "31B", "32", "33") # specify lfas for data summary
p$subareas = c("27N","27S", "28", "29", "30", "31A", "31B", "32", "33E", "33W") # specify lfas for data summary
logsInSeason<-lobster.db('process.logs')
cpueLFA.dat = CPUEplot(logsInSeason,lfa= p$lfas,yrs=2006:2016,graphic='pdf',path=figdir)
cpueSubArea.dat = CPUEplot(logsInSeason,subarea= p$subareas,yrs=2006:2016,graphic='R')
head(atSea)
summary(atSea[atSea$LFA== 27,])
View(atSea)
atSeaData<-addSYEAR(subset(atSea,LFA%in%LFAs))
atSeaData$YEAR<-year(atSeaData$SDATE)
lobster.db('atSea')
atSeaData<-addSYEAR(subset(atSea,LFA%in%LFAs))
setwd("D:/Newfoundland/Existing MPAs and AOIs/Eastport Data")
dat<- read.csv("MasterTag_vnotch.csv")
setwd("D:/Newfoundland/Existing MPAs and AOIs/Eastport Data\Data- V-notch")
setwd("D:/Newfoundland/Existing MPAs and AOIs/Eastport Data/Data- V-notch")
dat<- read.csv("MasterTag_vnotch.csv")
library(ggplot2)
library(dplyr)
library(assertthat)
library(wesanderson)
library(viridis)
mod_dat<- read.csv("MasterTag_vnotch_edit.csv")
mod_dat$NTAG<-as.numeric(mod_dat$TAG)
Ind<-unique(mod_dat$TAG) #
mod_dat = mod_dat %>%
ungroup()%>%
mutate(DATE = as.POSIXct(strptime(paste(DAY,MONTH,YEAR, sep="-"), format= "%d-%m-%Y", tz="")))%>%
arrange(DATE)%>%
group_by(TAG)%>%
mutate(INDEX = 1:n(),
DT = as.numeric(difftime(DATE,DATE[1], units = "days")),
RECAP = ifelse(INDEX==1, 0,
1))%>%
ungroup()
calculate_history=function(notch_status){
#note: we haven't accounted for records where it was notched when first observed. Need to adjust this to accomodate those situations
stopifnot(!any(is.na(notch_status)))
n_records = length(notch_status)
history = rep(0, times= n_records)
current_history = 0
max_history = 0
for(i in 1:n_records){
if(notch_status[i]==1&current_history==0){ #deals with case when prior state was unnotched but current state is notched
max_history = max_history +1
current_history = max_history
history[i] = current_history
}else if(notch_status[i]==1 & current_history!=0){
history[i] = current_history
}else if(notch_status[i]==2 & current_history!=0){
history[i] = current_history
current_history = 0
}else if(notch_status[i]==2 & current_history==0){
history[i]= current_history
}
}
return(history)
}
# Testing to see if the calculate_histories function works properly
test_hist0 = c(2,2,2) #all unnotched
test_hist1 = c(1,1,1) #all one record
test_hist2 = c(2,1,1) #starting out unnotched, moving notched
test_hist3 = c(1,1,2) #starting out notched, moving unnotched
test_hist4 = c(1,1,2,2,1,1) #starting out notched, two histories
test_hist5 = c(1,1,2,1,1,1,2,2,1,1,2)
#tests to see if history function works
assert_that(all(calculate_history(test_hist0)==c(0,0,0)))
assert_that(all(calculate_history(test_hist1)==c(1,1,1)))
assert_that(all(calculate_history(test_hist2)==c(0,1,1)))
assert_that(all(calculate_history(test_hist3)==c(1,1,1)))
assert_that(all(calculate_history(test_hist4)==c(1,1,1,0,2,2)))
assert_that(all(calculate_history(test_hist5)==c(1,1,1,2,2,2,2,0,3,3,3)))
history_dat = mod_dat %>%
group_by(TAG)%>%
filter(!SEX=="M")%>%     #filter out males
filter(
n()>1,         #filter out records w/ only one tag
!all(NOTCH==2) #filter out records where lobsters are always unnotched
)%>%
arrange(TAG, DATE)%>%
mutate(history = calculate_history(NOTCH))%>%
group_by(TAG, history)%>%
filter(history!=0, #removing all purely unnotched histories
n()!=1 #remove all histories with only a single record, as they don't tell how long a notch lasts
)%>%
summarize(
history_length = as.numeric(difftime(last(DATE),first(DATE),units = "days")),
right_censor = last(NOTCH)==1,
new_notch = CAT[1]%in%c(3,6),
min_length = min(LENGTH),
max_length = max(LENGTH),
n_records = n(),
frac_berried = mean(CLUTCH==1),
first_dat = first(DATE),
last_date = last(DATE),
growth = (max_length-min_length)/history_length
)
#to remove tags with two sexes
#tags_with_2_sexes = mod_dat %>%
# group_by(TAG)%>%
#summarise(n_sexes = length(unique(SEX)))%>%
#filter(n_sexes>1)%>%
#mutate(TAG = as.character(TAG))
write.csv(mod_dat, file = "modifiedData.csv")
write.csv(history_dat, file= "history_dat.csv",row.names = F)
## Pull out data by TAG - when the Index is greater than 1 and sort in order of date when
##Pull out TAGS that have been repeated at least once,
#with an index greater than 1, sorted by date within TAG
## THIS DOESN'T WORK
test = mod_dat%>%
group_by(TAG)%>%
filter(duplicated(.[["TAG"]]),
INDEX >1,
NOTCH == 1)%>%
arrange(DATE)
history_whole = mod_dat %>%
group_by(TAG)%>%
filter(!SEX=="M")%>%
filter(
n()>1,
!all(NOTCH==2)
)%>%
arrange(TAG, DATE)%>%
mutate(history = calculate_history(NOTCH))%>%
group_by(TAG, history)%>%
filter(history!=0,
n()!=1) %>%
mutate(tag_age = as.numeric(difftime(DATE, first(DATE), units="days")))%>% #note this is new: it calculates the relative age from the start of a given history for each observation.
filter(max(tag_age)>100)
clutchplot<-qplot(tag_age, LENGTH, data=history_whole,geom="line", group=paste(NTAG, history))+
labs(x= "Age of V-Notch (Days)", y = " Carapace Length (mm)", colour = "Berried") +
scale_y_continuous(limits =c(70, 155))+
geom_point(aes(color=CLUTCH==1),size=3.25)+
scale_colour_viridis(begin = 0.8, end =0, discrete = TRUE )+theme_bw()+
theme(axis.line = element_line(colour = "black"),
axis.title= element_text(size= 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
clutchplot
notchplot<-qplot(tag_age, LENGTH, data=history_whole,geom="line", group=paste(NTAG, history))+
labs(x= "Age of V-Notch (Days)", y = " Carapace Length (mm)", colour = "V-Notched") +
scale_y_continuous(limits =c(70, 155))+
geom_point(aes(color=NOTCH==1),size=3)+
scale_colour_viridis(begin = 1, end =0.35, discrete = TRUE )+theme_bw()+
theme(axis.line = element_line(colour = "black"),
axis.title= element_text(size= 12),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
notchplot
View(junk)
View(mod_dat)
View(mod_dat)
View(history_whole)
View(history_whole)
View(mod_dat)
summary(mod_dat)
tes<- mod_dat(mod_dat$TAG == "DF30303")
tes<- mod_dat[mod_dat$TAG == "DF30303"]
tes<- mod_dat[mod_dat$TAG == "DF30303",]
View(mod_dat)
View(tes)
View(mod_dat)
tes<- mod_dat[mod_dat$TAG == "M1856",]
tes<- mod_dat[mod_dat$TAG == "L2726",]
View(tes)
tes<- mod_dat[mod_dat$TAG == "L1674",]
View(tes)
tes<- mod_dat[mod_dat$TAG == "DF31401",]
View(tes)
tes<- mod_dat[mod_dat$TAG == "DF30424",]
View(tes)
tes<- mod_dat[mod_dat$TAG == "L6602",]
View(tes)
tes<- mod_dat[mod_dat$TAG == "Df30424",]
View(tes)
tes<- mod_dat[mod_dat$TAG == "Df30424",]
View(tes)
