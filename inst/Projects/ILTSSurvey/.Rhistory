require(bio.survey)
install_github('amcook/bio.survey')
require(bio.survey)
aout = stratifiedAnalysesCommercial(survey='DFO',lfa='LFA35-38')
require(bio.survey)
require(bio.lobster)
require(lubridate)
require(devtools)
require(bio.utilities)
require(PBSmapping)
la()
p = bio.lobster::load.environment()
p$libs = NULL
ff = "LFA35-38Assessment"
fp1 = file.path(project.datadirectory('bio.lobster'),"analysis",ff)
fpf1 = file.path(project.figuredirectory('bio.lobster'),ff)
dir.create(fpf1,showWarnings=F)
dir.create(fp1,showWarnings=F)
p1 = p
p1$yrs = 1970:2019
stratifiedAnalyses = function(p=p1, survey,lfa, fpf = fpf1, fp = fp1,f=ff,wd=10,ht=8){
p$series =c('summer')
p$define.by.polygons = T
p$lobster.subunits=F
p$area = lfa
p$years.to.estimate = p$yrs[-1]
p$length.based = F
p$by.sex = F
p$bootstrapped.ci=T
p$strata.files.return=F
p$vessel.correction.fixed=1.2
p$strat = NULL
p$clusters = c( rep( "localhost", 7) )
p$strata.efficiencies = F
p = make.list(list(yrs=p$years.to.estimate),Y=p)
p$reweight.strata = T #this subsets
aout= dfo.rv.analysis(DS='stratified.estimates.redo',p=p)
write.csv(aout,file=file.path(fpf, paste(lfa,'DFOtotalabund.csv')))
p$add.reference.lines = F
p$time.series.start.year = p$years.to.estimate[1]
p$time.series.end.year = p$years.to.estimate[length(p$years.to.estimate)]
p$metric = 'numbers' #weights
p$measure = 'stratified.mean' #'stratified.total'
p$figure.title = ""
p$reference.measure = 'median' # mean, geomean
p$file.name = file.path(f,paste(lfa,'DFOrestratifiednumbers.png',sep=""))
p$y.maximum = NULL # NULL # if ymax is too high for one year
p$show.truncated.numbers = F #if using ymax and want to show the numbers that are cut off as values on figure
p$legend = FALSE
p$running.median = T
p$running.length = 3
p$running.mean = F #can only have rmedian or rmean
p$error.polygon=F
p$error.bars=T
p$ylim=NULL
if(lfa == 'LFA35-38') p$ylim=c(0,150)
p$box=T
p$file.name = file.path(f,paste(lfa,'DFOrestratifiednumbersNOY.png', sep=""))
ref.out=   figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
p$box=T
p$ylim=NULL
p$metric = 'weights'
p$file.name = file.path(f,paste(lfa,'DFOrestratifiedweightsNOY.png',sep=""))
ref.out=   figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
p$box=NULL
p$ylim=NULL
p$file.name = file.path(f,paste(lfa,'DFOrestratifiedDWAO.png',sep=""))
p$metric = 'dwao'
ref.out=   figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
p$file.name = file.path(f,paste(lfa,'DFOrestratifiedgini.png',sep=""))
p$metric = 'gini'
p$ylim =c(0,1)
ref.out=   figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
p$ylim = NULL
return(aout)
}
a = stratifiedAnalyses(survey='DFO',lfa='LFA35-38')
lobster.db( DS = 'annual.landings.redo', p=p) #static annual landings tabke needs to be updated by CDenton
lobster.db( DS = 'seasonal.landings.redo', p=p) #static seasonal landings table needs to be updated by CDenton
require(bio.lobster)
require(PBSmapping)
a = lobster.db('annual.landings')
b = lobster.db('seasonal.landings')
ff = "LFA35-38Assessment"
b$YR = substr(b$SYEAR,6,9)
a = subset(a,YR<1976)
b = subset(b,YR>1975 & YR<=2019)
fpf1 = file.path(project.figuredirectory('bio.lobster'),ff)
fp1 = file.path(project.datadirectory('bio.lobster'),"analysis",ff)
LFA = c('LFA35','LFA36','LFA38')
for(i in LFA){
aa = a[,c('YR',i)]
bb = b[,c('YR',i)]
aa = (rbind(aa,bb))
aa = aa[order(aa$YR),]
file.name = paste('Landings',i,'.png',sep="")
png(file=file.path(fpf1,'LandingsL3538.png'),units='in',width=15,height=12,pointsize=18, res=300,type='cairo')
plot(aa$YR,aa[,i],type='h',lwd=4,col='black',xlab='Year',ylab='Landings (t)')
lines(aa$YR,runmed(aa[,i],3),col='salmon',lwd=3)
dev.off()
}
df2 = read.csv(file.path(fpf1,'LFA35-38 DFOCommB.csv'))
df =  read.csv(file.path(fpf1,'LFA35-38 DFOtotalabund.csv'))
df = subset(df,yr<1999)
df2 = subset(df2,yr>1998)
df = as.data.frame(rbind(df,df2))
df = df[,c('yr','w.Yst','w.ci.Yst.l','w.ci.Yst.u')] #proportion of total weight that is commercial
df$w.Yst[which(df$yr<1999)] <- df$w.Yst[which(df$yr<1999)]*0.746
df$w.ci.Yst.l[which(df$yr<1999)] <- df$w.ci.Yst.l[which(df$yr<1999)]*0.746
df$w.ci.Yst.u[which(df$yr<1999)] <- df$w.ci.Yst.u[which(df$yr<1999)]*0.746
df
with(df,plot(yr,w.Yst,pch=1,xlab='Year',ylab='Commerical Biomass (t)',ylim=c(0,9500)))
with(df,arrows(yr,y0=w.ci.Yst.u,y1=w.ci.Yst.l, length=0))
with(subset(df,yr>1998),points(yr,w.Yst,pch=16))
xx = rmed(df$yr,df$w.Yst)
xx = as.data.frame(do.call(cbind,xx))
with(subset(xx,yr<1999),lines(yr,x,col='salmon',lwd=1))
with(subset(xx,yr>1998),lines(yr,x,col='salmon',lwd=3))
png(file=file.path(fpf1,'LFA35-38CommBDFOextended.png'),units='in',width=10,height=8,pointsize=18, res=300,type='cairo')
with(df,plot(yr,w.Yst,pch=1,xlab='Year',ylab='Commerical Biomass (t)',ylim=c(0,9500)))
with(df,arrows(yr,y0=w.ci.Yst.u,y1=w.ci.Yst.l, length=0))
with(subset(df,yr>1998),points(yr,w.Yst,pch=16))
xx = rmed(df$yr,df$w.Yst)
xx = as.data.frame(do.call(cbind,xx))
with(subset(xx,yr<1999),lines(yr,x,col='salmon',lwd=1))
with(subset(xx,yr>1998),lines(yr,x,col='salmon',lwd=3))
dev.off()
a$L3538 = rowSums(a[,12:14])
b$L3538 = rowSums(b[,4:6])
c358 = as.data.frame(rbind(a[,c('YR','L3538')],b[,c('YR','L3538')]))
names(c358)[1] = 'yr'
df  =merge(df,c358)
df$rL = df$L3538/(df$w.ci.Yst.l+df$L3538)
df$rU =df$L3538/ (df$w.ci.Yst.u+df$L3538)
df$rM = df$L3538/(df$w.Yst+df$L3538)
plot(df$yr,df$rM,type='p',pch=16,col='black',xlab='Year',ylab='Relative F')
arrows(df$yr,y0 = df$rL,y1 = df$rU,length=0)
with(rmed(df$yr,df$rM),lines(yr,x,col='salmon',lwd=3))
df
a
b
a = lobster.db('annual.landings')
b = lobster.db('seasonal.landings')
ff = "LFA35-38Assessment"
b$YR = substr(b$SYEAR,6,9)
a = subset(a,YR<1976)
b = subset(b,YR>1975 & YR<=2020)
fpf1 = file.path(project.figuredirectory('bio.lobster'),ff)
fp1 = file.path(project.datadirectory('bio.lobster'),"analysis",ff)
LFA = c('LFA35','LFA36','LFA38')
for(i in LFA){
aa = a[,c('YR',i)]
bb = b[,c('YR',i)]
aa = (rbind(aa,bb))
aa = aa[order(aa$YR),]
file.name = paste('Landings',i,'.png',sep="")
png(file=file.path(fpf1,'LandingsL3538.png'),units='in',width=15,height=12,pointsize=18, res=300,type='cairo')
plot(aa$YR,aa[,i],type='h',lwd=4,col='black',xlab='Year',ylab='Landings (t)')
lines(aa$YR,runmed(aa[,i],3),col='salmon',lwd=3)
dev.off()
}
a$L3538 = rowSums(a[,12:14])
b$L3538 = rowSums(b[,4:6])
c358 = as.data.frame(rbind(a[,c('YR','L3538')],b[,c('YR','L3538')]))
names(c358)[1] = 'yr'
df  =merge(df,c358)
df$rL = df$L3538/(df$w.ci.Yst.l+df$L3538)
df$rU =df$L3538/ (df$w.ci.Yst.u+df$L3538)
df$rM = df$L3538/(df$w.Yst+df$L3538)
plot(df$yr,df$rM,type='p',pch=16,col='black',xlab='Year',ylab='Relative F')
arrows(df$yr,y0 = df$rL,y1 = df$rU,length=0)
with(rmed(df$yr,df$rM),lines(yr,x,col='salmon',lwd=3))
b
a = lobster.db('annual.landings')
b = lobster.db('seasonal.landings')
b
a = lobster.db('annual.landings')
b = lobster.db('seasonal.landings.redo')
b
b = lobster.db('seasonal.landings')
b
con = odbcConnect(oracle.server , uid=oracle.username, pwd=oracle.password, believeNRows=F) # believeNRows=F required for oracle db's
seasonal.landings = sqlQuery(con,'select * from LOBSTER.SLIP_LAND_SEASONAL')
seasonal.landings
con
seasonal.landings[order(seasonal.landings$SYEAR),]
la()
a = lobster.db('annual.landings')
b = lobster.db('seasonal.landings.redo')
a = lobster.db('annual.landings')
b = lobster.db('seasonal.landings')
b
a = lobster.db('annual.landings')
b = lobster.db('seasonal.landings')
ff = "LFA35-38Assessment"
b$YR = substr(b$SYEAR,6,9)
a = subset(a,YR<1976)
b = subset(b,YR>1975 & YR<=2020)
b
fpf1 = file.path(project.figuredirectory('bio.lobster'),ff)
fp1 = file.path(project.datadirectory('bio.lobster'),"analysis",ff)
LFA = c('LFA35','LFA36','LFA38')
for(i in LFA){
aa = a[,c('YR',i)]
bb = b[,c('YR',i)]
aa = (rbind(aa,bb))
aa = aa[order(aa$YR),]
file.name = paste('Landings',i,'.png',sep="")
png(file=file.path(fpf1,'LandingsL3538.png'),units='in',width=15,height=12,pointsize=18, res=300,type='cairo')
plot(aa$YR,aa[,i],type='h',lwd=4,col='black',xlab='Year',ylab='Landings (t)')
lines(aa$YR,runmed(aa[,i],3),col='salmon',lwd=3)
dev.off()
}
df2 = read.csv(file.path(fpf1,'LFA35-38 DFOCommB.csv'))
df =  read.csv(file.path(fpf1,'LFA35-38 DFOtotalabund.csv'))
df = subset(df,yr<1999)
df2 = subset(df2,yr>1998)
df = as.data.frame(rbind(df,df2))
df = df[,c('yr','w.Yst','w.ci.Yst.l','w.ci.Yst.u')] #proportion of total weight that is commercial
df$w.Yst[which(df$yr<1999)] <- df$w.Yst[which(df$yr<1999)]*0.746
df$w.ci.Yst.l[which(df$yr<1999)] <- df$w.ci.Yst.l[which(df$yr<1999)]*0.746
df$w.ci.Yst.u[which(df$yr<1999)] <- df$w.ci.Yst.u[which(df$yr<1999)]*0.746
a$L3538 = rowSums(a[,12:14])
b$L3538 = rowSums(b[,4:6])
c358 = as.data.frame(rbind(a[,c('YR','L3538')],b[,c('YR','L3538')]))
names(c358)[1] = 'yr'
df  =merge(df,c358)
df$rL = df$L3538/(df$w.ci.Yst.l+df$L3538)
df$rU =df$L3538/ (df$w.ci.Yst.u+df$L3538)
df$rM = df$L3538/(df$w.Yst+df$L3538)
df
plot(df$yr,df$rM,type='p',pch=16,col='black',xlab='Year',ylab='Relative F')
arrows(df$yr,y0 = df$rL,y1 = df$rU,length=0)
with(rmed(df$yr,df$rM),lines(yr,x,col='salmon',lwd=3))
png(file=file.path(fpf1,'LFA3538RelFDFO.png'),units='in',width=10,height=8,pointsize=18, res=300,type='cairo')
plot(df$yr,df$rM,type='p',pch=16,col='black',xlab='Year',ylab='Relative F')
arrows(df$yr,y0 = df$rL,y1 = df$rU,length=0)
with(rmed(df$yr,df$rM),lines(yr,x,col='salmon',lwd=3))
dev.off()
require(bio.survey)
require(bio.lobster)
require(lubridate)
require(devtools)
require(bio.utilities)
require(PBSmapping)
la()
p = bio.lobster::load.environment()
p$libs = NULL
ff = "LFA35-38Assessment"
fp1 = file.path(project.datadirectory('bio.lobster'),"analysis",ff)
fpf1 = file.path(project.figuredirectory('bio.lobster'),ff)
dir.create(fpf1,showWarnings=F)
dir.create(fp1,showWarnings=F)
p1 = p
p1$yrs = 1970:2020
stratifiedAnalyses = function(p=p1, survey,lfa, fpf = fpf1, fp = fp1,f=ff,wd=10,ht=8){
p$series =c('summer')
p$define.by.polygons = T
p$lobster.subunits=F
p$area = lfa
p$years.to.estimate = p$yrs[-1]
p$length.based = F
p$by.sex = F
p$bootstrapped.ci=T
p$strata.files.return=F
p$vessel.correction.fixed=1.2
p$strat = NULL
p$clusters = c( rep( "localhost", 7) )
p$strata.efficiencies = F
p = make.list(list(yrs=p$years.to.estimate),Y=p)
p$reweight.strata = T #this subsets
aout= dfo.rv.analysis(DS='stratified.estimates.redo',p=p)
write.csv(aout,file=file.path(fpf, paste(lfa,'DFOtotalabund.csv')))
p$add.reference.lines = F
p$time.series.start.year = p$years.to.estimate[1]
p$time.series.end.year = p$years.to.estimate[length(p$years.to.estimate)]
p$metric = 'numbers' #weights
p$measure = 'stratified.mean' #'stratified.total'
p$figure.title = ""
p$reference.measure = 'median' # mean, geomean
p$file.name = file.path(f,paste(lfa,'DFOrestratifiednumbers.png',sep=""))
p$y.maximum = NULL # NULL # if ymax is too high for one year
p$show.truncated.numbers = F #if using ymax and want to show the numbers that are cut off as values on figure
p$legend = FALSE
p$running.median = T
p$running.length = 3
p$running.mean = F #can only have rmedian or rmean
p$error.polygon=F
p$error.bars=T
p$ylim=NULL
if(lfa == 'LFA35-38') p$ylim=c(0,150)
p$box=T
p$file.name = file.path(f,paste(lfa,'DFOrestratifiednumbersNOY.png', sep=""))
ref.out=   figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
p$box=T
p$ylim=NULL
p$metric = 'weights'
p$file.name = file.path(f,paste(lfa,'DFOrestratifiedweightsNOY.png',sep=""))
ref.out=   figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
p$box=NULL
p$ylim=NULL
p$file.name = file.path(f,paste(lfa,'DFOrestratifiedDWAO.png',sep=""))
p$metric = 'dwao'
ref.out=   figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
p$file.name = file.path(f,paste(lfa,'DFOrestratifiedgini.png',sep=""))
p$metric = 'gini'
p$ylim =c(0,1)
ref.out=   figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
p$ylim = NULL
return(aout)
}
a = stratifiedAnalyses(survey='DFO',lfa='LFA35-38')
p = bio.lobster::load.environment()
p$libs = NULL
ff = "LFA35-38Assessment"
fp1 = file.path(project.datadirectory('bio.lobster'),"analysis",ff)
fpf1 = file.path(project.figuredirectory('bio.lobster'),ff)
dir.create(fpf1,showWarnings=F)
dir.create(fp1,showWarnings=F)
p1 = p
p1$yrs = 1970:2020
stratifiedAnalysesRecruits = function(p=p1, survey,lfa, fpf = fpf1, fp = fp1,f=ff,wd=10,ht=8){
p$series =c('summer')# p$series =c('georges');p$series =c('fall')
p$area = lfa
p$years.to.estimate = p$yrs
p$length.based = T
p$by.sex = T
p$size.class = c(70,82)
p$sex = c(1,2)
p$bootstrapped.ci=T
p$strata.files.return=F
p$vessel.correction.fixed=1.2
p$strat = NULL
p$clusters = c( rep( "localhost", 7) )
p$strata.efficiencies = F
p = make.list(list(yrs=p$years.to.estimate),Y=p)
p$define.by.polygons = T
p$lobster.subunits=F
p$reweight.strata = T #this subsets
aout= dfo.rv.analysis(DS='stratified.estimates.redo',p=p)
write.csv(aout,file=file.path(fpf, paste(lfa,'DFOrecruits.csv')))
p$add.reference.lines = F
p$time.series.start.year = p$years.to.estimate[1]
p$time.series.end.year = p$years.to.estimate[length(p$years.to.estimate)]
p$metric = 'numbers' #numbers
p$measure = 'stratified.mean' #'stratified.total'
p$figure.title = ""
p$reference.measure = 'median' # mean, geomean
p$file.name =  file.path(f,paste(lfa,'DFOrestratifiednumbersrecruits.png',sep=""))
p$y.maximum = NULL # NULL # if ymax is too high for one year
p$show.truncated.numbers = F #if using ymax and want to show the numbers that are cut off as values on figure
p$legend = FALSE
p$running.median = T
p$running.length = 3
p$running.mean = F #can only have rmedian or rmean
p$error.polygon=F
p$error.bars=T
if(lfa == 'LFA35-38') p$ylim = c(0,80)
p$file.name =  file.path(f,paste(lfa,'NOYDFOrestratifiednumbersrecruits.png',sep=""))
ref.out=   figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
}
stratifiedAnalysesRecruits(survey='DFO',lfa='LFA35-38')
FundyStns = na.omit(read.csv(file.path(project.datadirectory('bio.lobster'),"data","survey","FundyStations.csv")))
with(subset(FundyStns,TYPE=='ILTS'),points(X,Y,col='red',pch=16))
with(subset(FundyStns,TYPE=='ITQ'),points(X,Y,col='purple',pch=16))
with(surveyCatch,points(SET_LONG,SET_LAT,pch='.'))
x=surveyCatch[c(1599, 10735, 13000, 20780),c( 'SET_LONG','SET_LAT')]
names(x)=c("X","Y")
x$TYPE='ITQ'
head(FundyStns)
FundyStns
LobsterMap('35-36')
with(FundyStns,points(X,Y,col='red',pch=16))
GFS = groundfish.db('gsinf.odbc')
GFS
head(GFS)
subpoly.data<-read.csv(file.path(project.datadirectory("substrate"),"data","SubPolyData.csv"))
LFAs<-read.csv(file.path( project.datadirectory("bio.lobster"), "data","maps","LFAPolys.csv"))
LFAs
L = subset(LFAs, PID %in% c('35,36'))
L
LFAs<-read.csv(file.path( project.datadirectory("bio.lobster"), "data","maps","LFAPolys.csv"))
head(LFAs)
L = subset(LFAs, PID %in% c(35,36))
head(L)
convert.dd.dddd(GFS$slong*-1)
GFS$X = convert.dd.dddd(GFS$slong*-1)
GFS$Y = convert.dd.dddd(GFS$slat)
GFS$EID = 1:nrow(GFS)
require(bio.lobster)
require(bio.utilities)
require(PBSmapping)
require(devtoools)
la()
GFS = groundfish.db('gsinf.odbc')
GFS$X = convert.dd.dddd(GFS$slong*-1)
GFS$Y = convert.dd.dddd(GFS$slat)
GFS$EID = 1:nrow(GFS)
LFAs<-read.csv(file.path( project.datadirectory("bio.lobster"), "data","maps","LFAPolys.csv"))
L = subset(LFAs, PID %in% c('35,36'))
G = findPolys(GFS, L)
G = findPolys(na.omit(GFS[,c('X','Y','EID')], L)
G = findPolys(na.omit(GFS[,c('X','Y','EID')]), L)
L = subset(LFAs, PID %in% c('35,36'))
L = subset(LFAs, PID %in% c(35,36))
G = findPolys(na.omit(GFS[,c('X','Y','EID')]), L)
G
GF = subset(GFS, EID %in% G$EID)
LobsterMap('BoF')
lobster.db("survey")
with(surveyCatch,points(SET_LONG,SET_LAT,pch=1))
FundyStns = na.omit(read.csv(file.path(project.datadirectory('bio.lobster'),"data","survey","FundyStations.csv")))
LobsterMap('35-36')
with(FundyStns,points(X,Y,col='red',pch=16))
with(GF,points(X,Y,bg='green',pch=21))
with(FundyStns,points(X,Y,bg='red',pch=21))
g=makeGrid( x=seq(-67.2,-63.2,0.01),y=seq(44.5,46,0.01))
with(g,identify(X,Y))
with(g,identify(X,Y))
ww = g[,c( 54815,  54967,  72215,  75715,  77499,  80255,  88383, 104623, 106127, 112915, 143159),c('X','Y')]
ww$TYPE='NEW2020'
g
head(g)
ww = g[c( 54815,  54967,  72215,  75715,  77499,  80255,  88383, 104623, 106127, 112915, 143159),c('X','Y')]
ww$TYPE='NEW2020'
FundyStns = rbind(FundyStns,w)
FundyStns = rbind(FundyStns,ww)
LobsterMap('35-36')
with(FundyStns,points(X,Y,bg='red',pch=21))
dim(name <- function(variables) {
})
dim(FundyStns)
LobsterMap('35-36')
with(FundyStns,points(X,Y,bg='red',pch=21))
with(GF,points(X,Y,bg='green',pch=21))
with(FundyStns,points(X,Y,bg='red',pch=21))
dim(FundyStns)
with(g,identify(X,Y))
w=g[c( 59439,  62859,  64303,  75747,  78711,  87155,  88235,  88527, 107655, 109483, 117747, 130299, 143123, 143227),c('X','Y')]
w$TYPE='NEW2020'
FundyStns = rbind(FundyStns,w)
LobsterMap('35-36')
with(FundyStns,points(X,Y,bg='red',pch=21))
dim(FundyStns)
with(g,identify(X,Y))
w=g[c( 75635,  84011,  91623,  94835, 112791, 124255 ),c('X','Y')]
w$TYPE='NEW2020'
FundyStns = rbind(FundyStns,w)
LobsterMap('35-36')
with(FundyStns,points(X,Y,bg='red',pch=21))
write.csv(FundyStns, file.path(project.datadirectory('bio.lobster'),"data","survey","FundyStations2020.csv"))
FundyStns = na.omit(read.csv(file.path(project.datadirectory('bio.lobster'),"data","survey","FundyStations.csv")))
LobsterMap('35-36')
with(FundyStns,points(X,Y,col='red',pch=16))
FundyStns = na.omit(read.csv(file.path(project.datadirectory('bio.lobster'),"data","survey","ILTS2019Leg2stations.csv")))
FundyStns
FundyStns = na.omit(read.csv(file.path(project.datadirectory('bio.lobster'),"data","survey","ILTS2019Leg2stations.csv")))
FundyStns = na.omit(read.csv(file.path(project.datadirectory('bio.lobster'),"data","survey","ILTS2019Leg2stations.csv")))
LobsterMap('35-36')
with(FundyStns,points(X,Y,col='red',pch=16))
head(FundyStns)
FundyStns = na.omit(read.csv(file.path(project.datadirectory('bio.lobster'),"data","survey","ILTS2019Leg2stations.csv")))
LobsterMap('35-36')
with(FundyStns,points(X,Y,col='red',pch=16))
dim(FundyStns)
FundyStns = (read.csv(file.path(project.datadirectory('bio.lobster'),"data","survey","ILTS2019Leg2stations.csv")))
FundyStns = (read.csv(file.path(project.datadirectory('bio.lobster'),"data","survey","ILTS2019Leg2stations.csv")))
LobsterMap('35-36')
with(FundyStns,points(X,Y,col='red',pch=16))
with(GF,points(X,Y,bg='green',pch=21))
with(FundyStns,points(X,Y,bg='red',pch=21))
LobsterMap('35-36')
with(FundyStns,points(X,Y,bg='red',pch=21))
g=makeGrid( x=seq(-67.2,-63.2,0.01),y=seq(44.5,46,0.01))
LobsterMap('35-36')
with(GF,points(X,Y,bg='green',pch=21))
with(FundyStns,points(X,Y,bg='red',pch=21))
g=makeGrid( x=seq(-67.2,-63.2,0.01),y=seq(44.5,46,0.01))
with(g,identify(X,Y))
ww = g[c(26123,  58007,  59899,  64623,  66079,  69059,  70615,  72699,  81923,  85043,  85551,  86923,  94759,  98423, 101255, 106131,
106203, 112907, 114283, 125523, 125851, 127603, 135259, 136771, 144827, 159283),c('X','Y')]
ww$TYPE='NEW2020'
FundyStns = rbind(FundyStns,ww)
ww
FundyStns
ww$YEAR='NEW2020'
ww$STATION+NA
ww$COMMENT = 'GF and Mix'
ww$STATION=NA
FundyStns = rbind(FundyStns,ww)
ww
ww = g[c(26123,  58007,  59899,  64623,  66079,  69059,  70615,  72699,  81923,  85043,  85551,  86923,  94759,  98423, 101255, 106131,
106203, 112907, 114283, 125523, 125851, 127603, 135259, 136771, 144827, 159283),c('X','Y')]
ww$YEAR='NEW2020'
ww$STATION=NA
ww$COMMENT = 'GF and Mix'
ww
FundyStns = rbind(FundyStns,ww)
LobsterMap('35-36')
with(FundyStns,points(X,Y,bg='red',pch=21))
with(GF,points(X,Y,bg='green',pch=21))
with(FundyStns,points(X,Y,bg='red',pch=21))
FundyStns
with(g,identify(X,Y))
w=g[c(  46959,  56579,  67591,  72443,  78975,  80583 , 85171, 101655 ,103067, 111335, 116047 ,128755),c('X','Y')]
w$YEAR='NEW2020'
w$STATION=NA
w$COMMENT = 'GF and Mix'
FundyStns = rbind(FundyStns,w)
LobsterMap('35-36')
with(FundyStns,points(X,Y,bg='red',pch=21))
write.csv(FundyStns, file.path(project.datadirectory('bio.lobster'),"data","survey","FundyStations2020.csv"))
