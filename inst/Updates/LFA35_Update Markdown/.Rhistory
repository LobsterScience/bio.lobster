p$length.based = T
p$by.sex = T
p$size.class = c(83,300)
p$series =c('summer')# p$series =c('georges');p$series =c('fall')
p$years.to.estimate = p$yrs
p$length.based = T
p$by.sex = T
p$size.class = c(83,300)
p$sex = c(1,2)
p$bootstrapped.ci=T
p$strata.files.return=F
p$vessel.correction.fixed=1.2
p$strat = NULL
p$clusters = c( rep( "localhost", 7) )
p$strata.efficiencies = F
p = make.list(list(yrs=p$years.to.estimate),Y=p)
p$years.to.estimate = p$yrs
p$yrs = 1970:2020
p1 = p
p$series =c('summer')# p$series =c('georges');p$series =c('fall')
p$years.to.estimate = p$yrs
p$length.based = T
p$by.sex = T
p$size.class = c(83,300)
p$sex = c(1,2)
p$bootstrapped.ci=T
p$strata.files.return=F
p$vessel.correction.fixed=1.2
p$strat = NULL
p$clusters = c( rep( "localhost", 7) )
p$strata.efficiencies = F
p = make.list(list(yrs=p$years.to.estimate),Y=p)
p$define.by.polygons = T
p$lobster.subunits=F
p$area = lfa
lfa='LFA35-38'
stratifiedAnalysesCommercial = function( p=p1, survey,lfa, fpf = fpf1, fp = fp1,f=ff,wd=10,ht=8){
p$series =c('summer')# p$series =c('georges');p$series =c('fall')
p$years.to.estimate = p$yrs
p$length.based = T
p$by.sex = T
p$size.class = c(83,300)
p$sex = c(1,2)
p$bootstrapped.ci=T
p$strata.files.return=F
p$vessel.correction.fixed=1.2
p$strat = NULL
p$clusters = c( rep( "localhost", 7) )
p$strata.efficiencies = F
p = make.list(list(yrs=p$years.to.estimate),Y=p)
p$define.by.polygons = T
p$lobster.subunits=F
p$area = lfa
p$reweight.strata = T #this subsets
aout= dfo.rv.analysis(DS='stratified.estimates.redo',p=p)
write.csv(aout,file=file.path(fpf, paste(lfa,'DFOCommB.csv')))
p$add.reference.lines = F
p$time.series.start.year = p$years.to.estimate[1]
p$time.series.end.year = p$years.to.estimate[length(p$years.to.estimate)]
p$metric = 'weights' #weights
p$measure = 'stratified.total' #'stratified.total'
p$figure.title = ""
p$reference.measure = 'median' # mean, geomean
p$file.name =  file.path(f,paste(lfa,'DFOrestratifiedtotalweightscommercial.png',sep=""))
p$y.maximum = NULL # NULL # if ymax is too high for one year
p$show.truncated.weights = F #if using ymax and want to show the weights that are cut off as values on figure
p$legend = FALSE
p$running.median = T
p$running.length = 3
p$running.mean = F #can only have rmedian or rmean
p$error.polygon=F
p$error.bars=T
require(bio.lobster)
p$ylim2 = NULL
xx = aggregate(ObsLobs~yr,data=aout,FUN=sum)
names(xx) =c('x','y')
p$ylim=NULL
ref.out= figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
return(aout)
}
aout = stratifiedAnalysesCommercial(survey='DFO',lfa='LFA35-38')
p$series =c('summer')# p$series =c('georges');p$series =c('fall')
p$years.to.estimate = p$yrs
p$length.based = T
p$by.sex = T
p$size.class = c(83,300)
p$sex = c(1,2)
p$bootstrapped.ci=T
p$strata.files.return=F
p$vessel.correction.fixed=1.2
p$strat = NULL
p$clusters = c( rep( "localhost", 7) )
p$strata.efficiencies = F
p = make.list(list(yrs=p$years.to.estimate),Y=p)
p$define.by.polygons = T
p$lobster.subunits=F
p$area = lfa
p$reweight.strata = T #this subsets
aout= dfo.rv.analysis(DS='stratified.estimates.redo',p=p)
groundfish.db('odbc.redo')
require(bio.lobster)
groundfish.db('odbc.redo')
getwd()
setwd()
setwd("C:/Users/howsevj/Documents/LFA35_Update")
getwd()
getwd()
bookdown::render_book("index.Rmd")
require(knitr)
require(devtools)
require(rgdal)
require(usethis)
require(roxygen2)
require(geosphere)
require(rstanarm)
bookdown::render_book("index.Rmd")
library(knitr)
if (is_latex_output()) {
knitr_figs_dir <- "knitr-figs-pdf/"
knitr_cache_dir <- "knitr-cache-pdf/"
fig_out_type <- "png"
} else {
knitr_figs_dir <- "knitr-figs-docx/"
knitr_cache_dir <- "knitr-cache-docx/"
fig_out_type <- "png"
}
fig_asp <- 0.618
fig_width <- 9
fig_out_width <- "6in"
fig_dpi <- 180
fig_align <- "center"
fig_pos <- "htb"
opts_chunk$set(
collapse = TRUE,
warning = FALSE,
message = FALSE,
comment = "#>",
fig.path = knitr_figs_dir,
cache.path = knitr_cache_dir,
fig.asp = fig_asp,
fig.width = fig_width,
out.width = fig_out_width,
echo = FALSE,
#  autodep = TRUE,
#  cache = TRUE,
cache.comments = FALSE,
dev = fig_out_type,
dpi = fig_dpi,
fig.align = fig_align,
fig.pos = fig_pos
)
options(xtable.comment = FALSE)
options(kableExtra.latex.load_packages = FALSE)
require(RODBC)
require(rgdal)
require(devtools)
require(roxygen2)
require(geosphere)
require(SpatialHub)
require(lubridate)
require(bio.utilities)
require(bio.lobster)
require(rstanarm)
require(rlang)
require(glue)
require(PBSmapping)
p = bio.lobster::load.environment()
la()
assessment.year = 2020 ##Check Year
p$syr = 1989
p$yrs = p$syr:assessment.year
figdir = file.path("LFA35_Update")
p$lfas = c("35") # specify lfa
p$subareas = c("35") # specify subareas for data summary
## from Oracle
#lobster.db('logs.redo')
#lobster.db('temperature.data.redo')
#lobster.db('fsrs.redo')
groundfish.db('odbc.redo',datayrs = 1970:2019)
bookdown::render_book("index.Rmd")
require(bio.survey)
require(bio.lobster)
p = bio.lobster::load.environment()
p$libs = NULL
ff = "LFA35-38Assessment"
fp1 = file.path(project.datadirectory('bio.lobster'),"analysis",ff)
fpf1 = file.path(project.figuredirectory('bio.lobster'),ff)
dir.create(fpf1,showWarnings=F)
dir.create(fp1,showWarnings=F)
p$yrs = 1970:2019
p1 = p
stratifiedAnalysesCommercial = function( p=p1, survey,lfa, fpf = fpf1, fp = fp1,f=ff,wd=10,ht=8){
p$series =c('summer')# p$series =c('georges');p$series =c('fall')
p$years.to.estimate = p$yrs
p$length.based = T
p$by.sex = T
p$size.class = c(83,300)
p$sex = c(1,2)
p$bootstrapped.ci=T
p$strata.files.return=F
p$vessel.correction.fixed=1.2
p$strat = NULL
p$clusters = c( rep( "localhost", 7) )
p$strata.efficiencies = F
p = make.list(list(yrs=p$years.to.estimate),Y=p)
p$define.by.polygons = T
p$lobster.subunits=F
p$area = lfa
p$reweight.strata = T #this subsets
aout= dfo.rv.analysis(DS='stratified.estimates.redo',p=p)
write.csv(aout,file=file.path(fpf, paste(lfa,'DFOCommB.csv')))
p$add.reference.lines = F
p$time.series.start.year = p$years.to.estimate[1]
p$time.series.end.year = p$years.to.estimate[length(p$years.to.estimate)]
p$metric = 'weights' #weights
p$measure = 'stratified.total' #'stratified.total'
p$figure.title = ""
p$reference.measure = 'median' # mean, geomean
p$file.name =  file.path(f,paste(lfa,'DFOrestratifiedtotalweightscommercial.png',sep=""))
p$y.maximum = NULL # NULL # if ymax is too high for one year
p$show.truncated.weights = F #if using ymax and want to show the weights that are cut off as values on figure
p$legend = FALSE
p$running.median = T
p$running.length = 3
p$running.mean = F #can only have rmedian or rmean
p$error.polygon=F
p$error.bars=T
require(bio.lobster)
p$ylim2 = NULL
xx = aggregate(ObsLobs~yr,data=aout,FUN=sum)
names(xx) =c('x','y')
p$ylim=NULL
ref.out= figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
return(aout)
}
aout = stratifiedAnalysesCommercial(survey='DFO',lfa='LFA35-38')
p$series =c('summer')# p$series =c('georges');p$series =c('fall')
p$years.to.estimate = p$yrs
p$length.based = T
p$by.sex = T
p$size.class = c(83,300)
p$sex = c(1,2)
p$bootstrapped.ci=T
p$strata.files.return=F
p$vessel.correction.fixed=1.2
p$strat = NULL
p$clusters = c( rep( "localhost", 7) )
p$strata.efficiencies = F
p = make.list(list(yrs=p$years.to.estimate),Y=p)
p$define.by.polygons = T
p$lobster.subunits=F
p$area = lfa
lfa='LFA35-35'
p$area = lfa
p$reweight.strata = T #this subsets
aout= dfo.rv.analysis(DS='stratified.estimates.redo',p=p)
groundfish.db('gscat.odbc')
oracle.personal.user = 'cooka'
oracle.personal.pwd = 'bzz7plf'
bookdown::render_book("index.Rmd")
logs=lobster.db("process.logs")
TempModelling = TempModel( annual.by.area=F, redo.data=F)
CPUE.data<-CPUEModelData(p,redo=T,TempModelling)
## Commercial CPUE MOdels
mf1 = formula(logWEIGHT ~ fYEAR + DOS + TEMP + DOS * TEMP)
CPUE.data<- CPUEModelData(p,redo=F)
t=with(subset(CPUE.data,DOS==1),tapply(TEMP,LFA,mean))
pData=list()
CPUEModelResults = list()
for(i in 1:length( p$lfas)){
mdata = subset(CPUE.data,LFA==p$lfas[i]&SYEAR%in%p$yrs)
if(nrow(mdata)>10){
CPUEModelResults[[i]] = CPUEmodel(mf1,mdata,t=t[i],d=1)
pData[[i]]=CPUEModelResults[[i]]$pData
pData[[i]]$LFA=p$lfas[i]
}
}
names(CPUEModelResults) = p$lfas
CPUEindex=do.call("rbind",pData)
# plot
x11(width=8,height=5)
l35 = subset(CPUEindex,LFA==35,c("YEAR","mu"))
k = median(l35$mu[which(l35$YEAR %in% 2011:2018)])
usr = .4*k
lrp = .2*k
plotcpue<-plot(l35$YEAR,l35$mu,xlab='Year',ylab='CPUE (kg/TH)',type='p',pch=16,ylim=c(0,6))
running.median = with(rmed(l35$YEAR,l35$mu),data.frame(YEAR=yr,running.median=x))
l35=merge(l35,running.median,all=T)
lines(l35$YEAR,l35$running.median,col='blue',lty=1,lwd=3)
abline(h=usr,col='green',lwd=2,lty=2)
abline(h=lrp,col='red',lwd=2,lty=3)
bookdown:render_book("index.rmd")
bookdown::render_book("index.rmd")
require(RODBC)
require(rgdal)
require(devtools)
require(roxygen2)
require(geosphere)
require(SpatialHub)
require(lubridate)
require(bio.utilities)
require(bio.lobster)
require(rstanarm)
require(rlang)
require(glue)
require(PBSmapping)
p = bio.lobster::load.environment()
la()
assessment.year = 2020 ##Check Year
p$syr = 1989
p$yrs = p$syr:assessment.year
figdir = file.path("LFA35_Update")
p$lfas = c("35") # specify lfa
p$subareas = c("35") # specify subareas for data summary
## from Oracle
#lobster.db('logs.redo')
#lobster.db('temperature.data.redo')
#lobster.db('fsrs.redo')
#groundfish.db('odbc.redo',datayrs = 1970:2019)
#Not Oracle
logs=lobster.db('process.logs.redo')
logs=lobster.db("process.logs")
land = lobster.db('annual.landings')
logs=lobster.db("process.logs")
TempModelling = TempModel( annual.by.area=F, redo.data=F)
CPUE.data<-CPUEModelData(p,redo=T,TempModelling)
## Commercial CPUE MOdels
mf1 = formula(logWEIGHT ~ fYEAR + DOS + TEMP + DOS * TEMP)
CPUE.data<- CPUEModelData(p,redo=F)
t=with(subset(CPUE.data,DOS==1),tapply(TEMP,LFA,mean))
pData=list()
CPUEModelResults = list()
for(i in 1:length( p$lfas)){
mdata = subset(CPUE.data,LFA==p$lfas[i]&SYEAR%in%p$yrs)
if(nrow(mdata)>10){
CPUEModelResults[[i]] = CPUEmodel(mf1,mdata,t=t[i],d=1)
pData[[i]]=CPUEModelResults[[i]]$pData
pData[[i]]$LFA=p$lfas[i]
}
}
names(CPUEModelResults) = p$lfas
CPUEindex=do.call("rbind",pData)
# plot
x11(width=8,height=5)
l35 = subset(CPUEindex,LFA==35,c("YEAR","mu"))
k = median(l35$mu[which(l35$YEAR %in% 2011:2018)])
usr = .4*k
lrp = .2*k
plotcpue<-plot(l35$YEAR,l35$mu,xlab='Year',ylab='CPUE (kg/TH)',type='p',pch=16,ylim=c(0,6))
running.median = with(rmed(l35$YEAR,l35$mu),data.frame(YEAR=yr,running.median=x))
l35=merge(l35,running.median,all=T)
lines(l35$YEAR,l35$running.median,col='blue',lty=1,lwd=3)
abline(h=usr,col='green',lwd=2,lty=2)
abline(h=lrp,col='red',lwd=2,lty=3)
logs=lobster.db("process.logs")
require(bio.survey)
require(bio.lobster)
p = bio.lobster::load.environment()
p$libs = NULL
ff = "LFA35-38Assessment"
fp1 = file.path(project.datadirectory('bio.lobster'),"analysis",ff)
fpf1 = file.path(project.figuredirectory('bio.lobster'),ff)
dir.create(fpf1,showWarnings=F)
dir.create(fp1,showWarnings=F)
p$yrs = 1970:2019
p1 = p
stratifiedAnalysesCommercial = function( p=p1, survey,lfa, fpf = fpf1, fp = fp1,f=ff,wd=10,ht=8){
p$series =c('summer')# p$series =c('georges');p$series =c('fall')
p$years.to.estimate = p$yrs
p$length.based = T
p$by.sex = T
p$size.class = c(83,300)
p$sex = c(1,2)
p$bootstrapped.ci=T
p$strata.files.return=F
p$vessel.correction.fixed=1.2
p$strat = NULL
p$clusters = c( rep( "localhost", 7) )
p$strata.efficiencies = F
p = make.list(list(yrs=p$years.to.estimate),Y=p)
p$define.by.polygons = T
p$lobster.subunits=F
p$area = lfa
p$reweight.strata = T #this subsets
aout= dfo.rv.analysis(DS='stratified.estimates.redo',p=p)
write.csv(aout,file=file.path(fpf, paste(lfa,'DFOCommB.csv')))
p$add.reference.lines = F
p$time.series.start.year = p$years.to.estimate[1]
p$time.series.end.year = p$years.to.estimate[length(p$years.to.estimate)]
p$metric = 'weights' #weights
p$measure = 'stratified.total' #'stratified.total'
p$figure.title = ""
p$reference.measure = 'median' # mean, geomean
p$file.name =  file.path(f,paste(lfa,'DFOrestratifiedtotalweightscommercial.png',sep=""))
p$y.maximum = NULL # NULL # if ymax is too high for one year
p$show.truncated.weights = F #if using ymax and want to show the weights that are cut off as values on figure
p$legend = FALSE
p$running.median = T
p$running.length = 3
p$running.mean = F #can only have rmedian or rmean
p$error.polygon=F
p$error.bars=T
require(bio.lobster)
p$ylim2 = NULL
xx = aggregate(ObsLobs~yr,data=aout,FUN=sum)
names(xx) =c('x','y')
p$ylim=NULL
ref.out= figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
return(aout)
}
aout = stratifiedAnalysesCommercial(survey='DFO',lfa='LFA35-38')
write.csv(aout,file.path(fp1,'LFA3538CommercialB.csv'))
land = lobster.db('seasonal.landings')
land$YR = as.numeric(substr(land$SYEAR,6,9))
d1 = data.frame(YEAR = land$YR, LANDINGS = land[,paste0("LFA",p$lfas[i])])
land = lobster.db('seasonal.landings')
land$YR = as.numeric(substr(land$SYEAR,6,9))
d1 = data.frame(YEAR = land$YR, LANDINGS = land[,paste0("LFA",p$lfas[i])])
oracle.personal.user = 'cooka'
[11:15 AM] Cook, Adam
oracle.personal.pwd = 'bzz7plf'
oracle.personal.pwd = 'bzz7plf'
land = lobster.db('seasonal.landings')
land$YR = as.numeric(substr(land$SYEAR,6,9))
d1 = data.frame(YEAR = land$YR, LANDINGS = land[,paste0("LFA",p$lfas[i])])
head(land)
head(LANDINGS)
head(p)
p$lfas
d1 = data.frame(YEAR = land$YR, LANDINGS = land[,paste0("LFA",p$lfas[i])])
bookdown::render_book("index.rmd")
require(bio.survey)
require(bio.lobster)
p = bio.lobster::load.environment()
p$libs = NULL
ff = "LFA35-38Assessment"
fp1 = file.path(project.datadirectory('bio.lobster'),"analysis",ff)
fpf1 = file.path(project.figuredirectory('bio.lobster'),ff)
dir.create(fpf1,showWarnings=F)
dir.create(fp1,showWarnings=F)
p$yrs = 1970:2019
p1 = p
stratifiedAnalysesCommercial = function( p=p1, survey,lfa, fpf = fpf1, fp = fp1,f=ff,wd=10,ht=8){
p$series =c('summer')# p$series =c('georges');p$series =c('fall')
p$years.to.estimate = p$yrs
p$length.based = T
p$by.sex = T
p$size.class = c(83,300)
p$sex = c(1,2)
p$bootstrapped.ci=T
p$strata.files.return=F
p$vessel.correction.fixed=1.2
p$strat = NULL
p$clusters = c( rep( "localhost", 7) )
p$strata.efficiencies = F
p = make.list(list(yrs=p$years.to.estimate),Y=p)
p$define.by.polygons = T
p$lobster.subunits=F
p$area = lfa
p$reweight.strata = T #this subsets
aout= dfo.rv.analysis(DS='stratified.estimates.redo',p=p)
write.csv(aout,file=file.path(fpf, paste(lfa,'DFOCommB.csv')))
p$add.reference.lines = F
p$time.series.start.year = p$years.to.estimate[1]
p$time.series.end.year = p$years.to.estimate[length(p$years.to.estimate)]
p$metric = 'weights' #weights
p$measure = 'stratified.total' #'stratified.total'
p$figure.title = ""
p$reference.measure = 'median' # mean, geomean
p$file.name =  file.path(f,paste(lfa,'DFOrestratifiedtotalweightscommercial.png',sep=""))
p$y.maximum = NULL # NULL # if ymax is too high for one year
p$show.truncated.weights = F #if using ymax and want to show the weights that are cut off as values on figure
p$legend = FALSE
p$running.median = T
p$running.length = 3
p$running.mean = F #can only have rmedian or rmean
p$error.polygon=F
p$error.bars=T
require(bio.lobster)
p$ylim2 = NULL
xx = aggregate(ObsLobs~yr,data=aout,FUN=sum)
names(xx) =c('x','y')
p$ylim=NULL
ref.out= figure.stratified.analysis(x=aout,out.dir = 'bio.lobster', p=p,wd=wd,ht=ht)
return(aout)
}
aout = stratifiedAnalysesCommercial(survey='DFO',lfa='LFA35-38')
groundfish.db('gscat.odbc')
groundfish.db('gscat.odbc')
groundfish.db('gsinf.odbc')
test<-groundfish.db('gsdet.odbc')
head(test)
groundfish.db('gscat.odbc.redo')
oracle.personal.password='bzz7plf'
groundfish.db('gscat.odbc.redo')
logs=lobster.db("process.logs")
TempModelling = TempModel( annual.by.area=F, redo.data=F)
CPUE.data<-CPUEModelData(p,redo=T,TempModelling)
## Commercial CPUE MOdels
mf1 = formula(logWEIGHT ~ fYEAR + DOS + TEMP + DOS * TEMP)
CPUE.data<- CPUEModelData(p,redo=F)
t=with(subset(CPUE.data,DOS==1),tapply(TEMP,LFA,mean))
pData=list()
CPUEModelResults = list()
for(i in 1:length( p$lfas)){
mdata = subset(CPUE.data,LFA==p$lfas[i]&SYEAR%in%p$yrs)
if(nrow(mdata)>10){
CPUEModelResults[[i]] = CPUEmodel(mf1,mdata,t=t[i],d=1)
pData[[i]]=CPUEModelResults[[i]]$pData
pData[[i]]$LFA=p$lfas[i]
}
}
